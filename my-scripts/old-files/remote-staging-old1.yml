name: Remote Staging Workflow

on:
  push:
    branches:
      - staging

jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose          

  teardown:
    needs: setup
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Teardown Docker Compose stack
        run: docker-compose -f docker-compose.remote-staging.yml -v down    

  deploy:
    needs: teardown
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set docker user permissions
        run: |
          sudo usermod -aG docker $USER
          newgrp docker
          sudo chmod 777 /var/run/docker.sock

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create Environment
        run: |
          echo "Creating environment file..."
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DB_PORT=${{ secrets.MYSQL_DB_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "bbdevcomVideo_ACCESS_TOKEN_ID=${{ secrets.bbdevcomVideo_ACCESS_TOKEN_ID }}" >> .env
          echo "bbdevcomVideo_SECRET_KEY=${{ secrets.bbdevcomVideo_SECRET_KEY }}" >> .env

      - name: Deploy with Docker Compose
        run: docker-compose -f docker-compose.remote-staging.yml up -d     
